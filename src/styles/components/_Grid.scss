@mixin generate-grid-size($size-name) {
  [class*='grid-col-#{$size-name}']{
    flex: 0 0 var(--col-size);
    max-width: var(--col-size);
    order: var(--order);
    --order: initial;
  }
  .grid-col-#{$size-name}-fluid {
    --col-size: 100%;
    flex-grow: 1;
    flex-basis: 0;
  }
  [class*='grid-col-#{$size-name}-offset']{ 
    --margin-left: var(--ls-0p);
    margin-left: var(--margin-left);
  }
  @for $i from 1 through 12 {
    .grid-col-#{$size-name}-#{$i}, [class*='-c0'].grid-col-#{$size-name}-#{$i} {
      --col-size: #{($i * 100% / 12)};
    }
    .grid-col-#{$size-name}-offset-#{($i - 1)} {
      --margin-left: #{(($i - 1) * 100% / 12)};
    }
  }
  .grid-col-#{$size-name}-normal {
    --order: initial;
  }
  .grid-col-#{$size-name}-first {
    --order: -999;
  }
  .grid-col-#{$size-name}-last {
    --order: 999;
  }
}

.grid-container {
  &.justify-start .grid-row {
    justify-content: flex-start;
  }
  &.justify-end .grid-row {
    justify-content: flex-end;
  }
  &.justify-center .grid-row {
    justify-content: center;
  }
  &.justify-between .grid-row {
    justify-content: space-between;
  }
  &.justify-around .grid-row {
    justify-content: space-around;
  }
  &.justify-evenly .grid-row {
    justify-content: space-evenly;
  }
  &.align-start .grid-row {
    align-items: flex-start;
  }
  &.align-end .grid-row {
    align-items: flex-end;
  }
  &.align-center .grid-row {
    align-items: center;
  }
  &.align-stretch .grid-row {
    align-items: stretch;
  }
  &.align-baseline .grid-row {
    align-items: baseline;
  }
}
// Grid row definition.
.grid-row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-flow: row wrap;
}

@include generate-grid-size('xs');
@media screen and (min-width: 600px) {  
  @include generate-grid-size('sm');
}
@media screen and (min-width: 900px) {  
  @include generate-grid-size('md');
}
@media screen and (min-width: 1200px) {  
  @include generate-grid-size('lg');
}


