@mixin generate-grid-size($size-name) {
  @for $i from 1 through 12 {
    .grid-col-#{$size-name}-#{$i} {
      --col-#{$size-name}-size: #{($i * 100% / 12)};
    }
  }
}

[class*='grid-col-'] {
  --col-xs-size: auto;
  --col-sm-size: auto;
  --col-md-size: auto;
  --col-lg-size: auto;
  flex: 0 0 var(--col-xs-size);
  max-width: var(--col-xs-size);
  @media screen and (min-width: 600px) {
    flex: 0 0 var(--col-sm-size);
  }
  @media screen and (min-width: 900px) {
    flex: 0 0 var(--col-md-size);
  }
  @media screen and (min-width: 1200px) {
    flex: 0 0 var(--col-lg-size);
  }
}

@media screen and (max-width: 599px) {
  [class*='grid-col-xs-p']:not([class*='grid-col-xs-pcalc']) {
    flex: 0 0 auto;
  }
}
@media screen and (min-width: 600px) and (max-width: 899px) {
  [class*='grid-col-sm-p']:not([class*='grid-col-sm-pcalc']) {
    flex: 0 0 auto;
  }
}
@media screen and (min-width: 900px) and (max-width: 1199px) {
  [class*='grid-col-md-p']:not([class*='grid-col-md-pcalc']) {
    flex: 0 0 auto;
  }
}
@media screen and (min-width: 1200px) {
  [class*='grid-col-lg-p']:not([class*='grid-col-lg-pcalc']) {
    flex: 0 0 auto;
  }
}

.grid-col-xs-fluid {
  --col-xs-size: 100%;
  @media screen and (max-width: 599px) {
    flex-grow: 1;
    flex-basis: 0;
  }
}
.grid-col-sm-fluid {
  --col-sm-size: 100%;
  @media screen and (min-width: 600px) and (max-width: 899px) {
    flex-grow: 1;
    flex-basis: 0;
  }
}
.grid-col-md-fluid {
  --col-md-size: 100%;
  @media screen and (min-width: 900px) and (max-width: 1199px) {
    flex-grow: 1;
    flex-basis: 0;
  }
}
.grid-col-lg-fluid {
  --col-lg-size: 100%;
  @media screen and (min-width: 1200px) {
    flex-grow: 1;
    flex-basis: 0;
  }  
}

.grid-container {
  &.justify-start .grid-row {
    justify-content: flex-start;
  }
  &.justify-end .grid-row {
    justify-content: flex-end;
  }
  &.justify-center .grid-row {
    justify-content: center;
  }
  &.justify-between .grid-row {
    justify-content: space-between;
  }
  &.justify-around .grid-row {
    justify-content: space-around;
  }
  &.justify-evenly .grid-row {
    justify-content: space-evenly;
  }
  &.align-start .grid-row {
    align-items: flex-start;
  }
  &.align-end .grid-row {
    align-items: flex-end;
  }
  &.align-center .grid-row {
    align-items: center;
  }
  &.align-stretch .grid-row {
    align-items: stretch;
  }
  &.align-baseline .grid-row {
    align-items: baseline;
  }
}
// Grid row definition.
.grid-row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-flow: row wrap;
}

@include generate-grid-size('xs');
@include generate-grid-size('sm');
@include generate-grid-size('md');
@include generate-grid-size('lg');


