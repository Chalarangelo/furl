@mixin define-button-color-variant ($class-name, $color-name) {
  &.#{$class-name} {
    --background-color: var(--#{$color-name}-500);
    --secondary-background-color: var(--#{$color-name}-600);
    --tertiary-background-color: var(--#{$color-name}-200);
    --secondary-color: var(--#{$color-name}-900);
    --color: var(--#{$color-name}-50);
    &[disabled] {
      --background-color: var(--#{$color-name}-200);
      --secondary-background-color: var(--#{$color-name}-300);
    }
    &.ghost, &.outline {
      --color: var(--#{$color-name}-800);
      &[disabled]{
        --color: var(--#{$color-name}-700);
      }
      &:hover, &:focus {
        --color: var(--#{$color-name}-50);
        &[disabled]{
          --color: var(--#{$color-name}-700);
        }
      }
    }
  }
}

button, .button, a.button {
  line-height: 1.5;
  border: 0;
  background: var(--background-color);
  &:hover, &:focus {
    border: 0;
  }

  --margin: var(--ls-75p);
  --padding-horizontal: var(--ls-75p);
  --padding-vertical: var(--ls-50p);

  --border-radius: var(--ls-25p);
  --background-color: var(--interface-gray-500);
  --secondary-background-color: var(--interface-gray-600);
  --tertiary-background-color: var(--interface-gray-200);
  --color: var(--interface-gray-50);
  --secondary-color: var(--interface-gray-900);
  &[disabled] {
    --background-color: var(--interface-gray-200);
    --secondary-background-color: var(--interface-gray-300);
  }

  transition: all 0.3s ease;

  // Size variants
  &.small {
    --padding-horizontal: var(--ls-50p);
    --padding-vertical: var(--ls-25p);
  }
  &.large {
    --padding-horizontal: var(--ls-100p);
    --padding-vertical: var(--ls-75p);
  }

  // Shape variants
  &.rounded {
    border-radius: var(--ls-900p);
  }

  // Fill variants
  &.flat {
    &:hover, &:focus {
      background: var(--secondary-background-color);
    }
  }
  &.solid {
    --box-shadow: var(--shadow-100); 
    &:hover, &:focus {
      --box-shadow: var(--shadow-300);
      &[disabled]{
        --box-shadow: var(--shadow-100); 
      }
    }
  }
  &.light {
    background: var(--tertiary-background-color);
    color: var(--secondary-color);
    --box-shadow: var(--shadow-100);
    &:hover, &:focus {
      --box-shadow: var(--shadow-300);
      &[disabled]{
        --box-shadow: var(--shadow-100); 
      }
    }
  }
  &.gradient {
    background: #{'linear-gradient(var(--background-color), var(--secondary-background-color))'};
    --box-shadow: var(--shadow-100); 
    &:hover, &:focus {
      --box-shadow: var(--shadow-300);
      &[disabled]{
        --box-shadow: var(--shadow-100); 
      }
    }
  }
  &.outline {
    border: 1px solid var(--background-color);
    background: transparent;
    --color: var(--interface-gray-800);
    &[disabled]{
      --color: var(--interface-gray-700);
    }
    &:hover, &:focus {
      background: var(--background-color);
      --color: var(--interface-gray-50); 
      &[disabled]{
        background: transparent;
        --color: var(--interface-gray-700);
      }
    }
  }
  &.ghost {
    background: transparent;
    --color: var(--interface-gray-800);
    &[disabled]{
      --color: var(--interface-gray-700);
    }
    &:hover, &:focus {
      background: var(--background-color);
      --color: var(--interface-gray-50);
      &[disabled]{
        background: transparent;
        --color: var(--interface-gray-700);
      }
    }
  }
  &.flat {
    --box-shadow: var(--shadow-0);
    &:hover, &:focus {
      --box-shadow: var(--shadow-0);
      &[disabled]{
        --box-shadow: var(--shadow-0); 
      }
    }
  }

  // Color variants
  @include define-button-color-variant('danger', 'danger-red');
  @include define-button-color-variant('success', 'success-green');
  @include define-button-color-variant('warning', 'warning-yellow');
  @include define-button-color-variant('primary', 'focus-blue');
  @include define-button-color-variant('secondary', 'deep-purple');

  // Text variants
  &.uppercase {
    text-transform: uppercase;
    letter-spacing: 0.0375em;
  }
}

.button-group {
  display: inline-block;
  --margin: var(--ls-75p);
  --border-radius: var(--ls-25p);
  &.solid, &.gradient {
    --box-shadow: var(--shadow-100); 
  }
  &.outline {
    & >:not(:last-child) {
      border-right: 0;
    }
  }
  &.rounded {
    --border-radius: 20%/50%;
    & > * {
      --border-radius: 100%
    }
  }
  >button, >.button, >a.button {
    --margin: var(--ls-0p);
    border-radius: var(--ls-0p);
    --box-shadow: 0;
    &:first-child {
      border-top-left-radius: var(--border-radius);
      border-bottom-left-radius: var(--border-radius);
    }
    &:last-child {
      border-top-right-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }
    & + button, & + .button, & + a.button {
      border-left: 1px solid var(--secondary-background-color);
    }
  }
}